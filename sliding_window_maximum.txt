class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
             Deque<Integer> q1=new LinkedList<Integer>();
            int[] arr=new int[nums.length-k+1];
            int i=0,m=0;
            for(i=0;i<k;i++)
            {
                while(!q1.isEmpty() && nums[i]>=nums[q1.peekLast()])
                    q1.removeLast();
                q1.addLast(i);
            }
            for(i=k;i<nums.length;i++)
            {
               arr[m]=nums[q1.peek()];
               m=m+1;
               while ((!q1.isEmpty()) && q1.peek() <= i - k) 
               q1.removeFirst();
               while ((!q1.isEmpty()) && nums[i] >= nums[q1.peekLast()]) 
               q1.removeLast();
                
                q1.addLast(i);
            }
        arr[m]=nums[q1.peek()];
        return arr;
    }
}